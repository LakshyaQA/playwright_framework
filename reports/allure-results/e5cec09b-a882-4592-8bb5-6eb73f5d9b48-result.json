{"name": "test_run_one", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nCall log:\n  - waiting for locator(\"button[tabindex=\\\"\\\"]\")", "trace": "browser_page = <Page url='https://dev.aeye.pro/itc/login'>\n\n    def test_run_one(browser_page):\n        page = browser_page\n    \n        page.goto(\"https://dev.aeye.pro/itc/login\")\n        logger.info(\"Opening Aeye Portal\")\n    \n        page.get_by_label(\"Username\").click()\n        page.get_by_label(\"Username\").fill(\"lakshyasharmaqa@proton.me\")\n        logger.info(\"Username filled\")\n    \n        page.locator('#password').click()  # Using the input's id attribute directly\n        page.locator('#password').fill(\"Tester@1234\")\n        logger.info(\"Password filled\")\n    \n>       page.locator('button[tabindex=\"\"]').click()\n\nTestcases\\test_base.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15543: in click\n    self._sync(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:549: in click\n    await self._channel.send(\"click\", self._timeout, locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x0000020CDA1C6CF0>, cb = <function Channel.send.<locals>.<lambda> at 0x0000020CDA50AC00>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.click: Target page, context or browser has been closed\nE           Call log:\nE             - waiting for locator(\"button[tabindex=\\\"\\\"]\")\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TargetClosedError"}, "start": 1759388465444, "stop": 1759388469336, "uuid": "ffcca3e4-b949-459c-a824-1dabe17d6224", "testCaseId": "9d41bfea19994c473ba5c228db6491f7", "fullName": "Testcases.test_base#test_run_one", "titlePath": ["Testcases", "test_base.py"]}